/**
 * Go SDK for OpenFGA
 *
 * API version: 0.1
 * Website: https://openfga.dev
 * Documentation: https://openfga.dev/docs
 * Support: https://discord.gg/8naAwJfWN6
 *
 * NOTE: This file was auto generated by OpenAPI Generator (https://openapi-generator.tech). DO NOT EDIT.
 */

package openfga

import (
	"encoding/json"
)

// ReadRequestParams struct for ReadRequestParams
type ReadRequestParams struct {
	TupleKey             *TupleKey `json:"tuple_key,omitempty"`
	AuthorizationModelId *string   `json:"authorization_model_id,omitempty"`
	PageSize             *int32    `json:"page_size,omitempty"`
	ContinuationToken    *string   `json:"continuation_token,omitempty"`
}

// NewReadRequestParams instantiates a new ReadRequestParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadRequestParams() *ReadRequestParams {
	this := ReadRequestParams{}
	return &this
}

// NewReadRequestParamsWithDefaults instantiates a new ReadRequestParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadRequestParamsWithDefaults() *ReadRequestParams {
	this := ReadRequestParams{}
	return &this
}

// GetTupleKey returns the TupleKey field value if set, zero value otherwise.
func (o *ReadRequestParams) GetTupleKey() TupleKey {
	if o == nil || o.TupleKey == nil {
		var ret TupleKey
		return ret
	}
	return *o.TupleKey
}

// GetTupleKeyOk returns a tuple with the TupleKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadRequestParams) GetTupleKeyOk() (*TupleKey, bool) {
	if o == nil || o.TupleKey == nil {
		return nil, false
	}
	return o.TupleKey, true
}

// HasTupleKey returns a boolean if a field has been set.
func (o *ReadRequestParams) HasTupleKey() bool {
	if o != nil && o.TupleKey != nil {
		return true
	}

	return false
}

// SetTupleKey gets a reference to the given TupleKey and assigns it to the TupleKey field.
func (o *ReadRequestParams) SetTupleKey(v TupleKey) {
	o.TupleKey = &v
}

// GetAuthorizationModelId returns the AuthorizationModelId field value if set, zero value otherwise.
func (o *ReadRequestParams) GetAuthorizationModelId() string {
	if o == nil || o.AuthorizationModelId == nil {
		var ret string
		return ret
	}
	return *o.AuthorizationModelId
}

// GetAuthorizationModelIdOk returns a tuple with the AuthorizationModelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadRequestParams) GetAuthorizationModelIdOk() (*string, bool) {
	if o == nil || o.AuthorizationModelId == nil {
		return nil, false
	}
	return o.AuthorizationModelId, true
}

// HasAuthorizationModelId returns a boolean if a field has been set.
func (o *ReadRequestParams) HasAuthorizationModelId() bool {
	if o != nil && o.AuthorizationModelId != nil {
		return true
	}

	return false
}

// SetAuthorizationModelId gets a reference to the given string and assigns it to the AuthorizationModelId field.
func (o *ReadRequestParams) SetAuthorizationModelId(v string) {
	o.AuthorizationModelId = &v
}

// GetPageSize returns the PageSize field value if set, zero value otherwise.
func (o *ReadRequestParams) GetPageSize() int32 {
	if o == nil || o.PageSize == nil {
		var ret int32
		return ret
	}
	return *o.PageSize
}

// GetPageSizeOk returns a tuple with the PageSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadRequestParams) GetPageSizeOk() (*int32, bool) {
	if o == nil || o.PageSize == nil {
		return nil, false
	}
	return o.PageSize, true
}

// HasPageSize returns a boolean if a field has been set.
func (o *ReadRequestParams) HasPageSize() bool {
	if o != nil && o.PageSize != nil {
		return true
	}

	return false
}

// SetPageSize gets a reference to the given int32 and assigns it to the PageSize field.
func (o *ReadRequestParams) SetPageSize(v int32) {
	o.PageSize = &v
}

// GetContinuationToken returns the ContinuationToken field value if set, zero value otherwise.
func (o *ReadRequestParams) GetContinuationToken() string {
	if o == nil || o.ContinuationToken == nil {
		var ret string
		return ret
	}
	return *o.ContinuationToken
}

// GetContinuationTokenOk returns a tuple with the ContinuationToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadRequestParams) GetContinuationTokenOk() (*string, bool) {
	if o == nil || o.ContinuationToken == nil {
		return nil, false
	}
	return o.ContinuationToken, true
}

// HasContinuationToken returns a boolean if a field has been set.
func (o *ReadRequestParams) HasContinuationToken() bool {
	if o != nil && o.ContinuationToken != nil {
		return true
	}

	return false
}

// SetContinuationToken gets a reference to the given string and assigns it to the ContinuationToken field.
func (o *ReadRequestParams) SetContinuationToken(v string) {
	o.ContinuationToken = &v
}

func (o ReadRequestParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TupleKey != nil {
		toSerialize["tuple_key"] = o.TupleKey
	}
	if o.AuthorizationModelId != nil {
		toSerialize["authorization_model_id"] = o.AuthorizationModelId
	}
	if o.PageSize != nil {
		toSerialize["page_size"] = o.PageSize
	}
	if o.ContinuationToken != nil {
		toSerialize["continuation_token"] = o.ContinuationToken
	}
	return json.Marshal(toSerialize)
}

type NullableReadRequestParams struct {
	value *ReadRequestParams
	isSet bool
}

func (v NullableReadRequestParams) Get() *ReadRequestParams {
	return v.value
}

func (v *NullableReadRequestParams) Set(val *ReadRequestParams) {
	v.value = val
	v.isSet = true
}

func (v NullableReadRequestParams) IsSet() bool {
	return v.isSet
}

func (v *NullableReadRequestParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadRequestParams(val *ReadRequestParams) *NullableReadRequestParams {
	return &NullableReadRequestParams{value: val, isSet: true}
}

func (v NullableReadRequestParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadRequestParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
